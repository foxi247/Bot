import asyncio
import google.generativeai as genai
from data.config import GEMINI_API_KEY

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API
if not GEMINI_API_KEY:
    raise ValueError("‚ùå GEMINI_API_KEY –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

genai.configure(api_key=GEMINI_API_KEY)

generation_config = {
    "temperature": 0.7,
    "top_p": 1,
    "top_k": 1,
    "max_output_tokens": 2048,
}

safety_settings = [
    {"category": "HARM_CATEGORY_HARASSMENT", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
    {"category": "HARM_CATEGORY_HATE_SPEECH", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
    {"category": "HARM_CATEGORY_SEXUALLY_EXPLICIT", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
    {"category": "HARM_CATEGORY_DANGEROUS_CONTENT", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
]

# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–±–æ—á—É—é –º–æ–¥–µ–ª—å (–ø—Ä–æ–≤–µ—Ä—å —á–µ—Ä–µ–∑ list_models.py!)
# ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ ...

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—É—é –º–æ–¥–µ–ª—å
MODEL_NAME = "models/gemini-2.5-flash-image"

model = genai.GenerativeModel(
    model_name=MODEL_NAME,
    generation_config=generation_config,
    safety_settings=safety_settings,
)

async def generate_gemini_response(prompt: str) -> str:
    try:
        response = await asyncio.wait_for(
            asyncio.to_thread(model.generate_content, prompt),
            timeout=30.0
        )
        if response.text:
            return response.text.strip()
        else:
            return "‚ö†Ô∏è Gemini –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."
    except asyncio.TimeoutError:
        return "‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è."
    except Exception as e:
        error_str = str(e)
        if "API_KEY_INVALID" in error_str:
            return "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π API-–∫–ª—é—á Gemini."
        elif "404" in error_str:
            return f"‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º—è: {MODEL_NAME}"
        elif "block_reason" in error_str:
            return "üö´ –ó–∞–ø—Ä–æ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é."
        else:
            return f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {error_str[:150]}..."